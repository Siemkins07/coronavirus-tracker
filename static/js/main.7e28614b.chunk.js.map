{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","images/covid.png","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/covid_logo.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","variants","id","name","style","styles","infected","end","text","className","container","Grid","spacing","justify","map","variant","item","component","Card","xs","md","key","cx","card","CardContent","Typography","color","gutterBottom","start","value","duration","separator","Date","toLocaleDateString","src","covid","alt","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","dailyData","total","date","reportDate","fetchCountries","countries","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","index","App","state","fetchedData","setState","this","image","covidLogo","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e28614b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2kB17\",\"card\":\"Cards_card__2LA7C\",\"infected\":\"Cards_infected__1DO3N\",\"recovered\":\"Cards_recovered__2Jsnk\",\"deaths\":\"Cards_deaths__Z-FdX\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames';\r\nimport covid from '../../images/covid.png'\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n \r\n  const variants = [{\r\n    id: 1,\r\n    name: 'Infected',\r\n    style: styles.infected,\r\n    end: confirmed,\r\n    text: ' active cases of '\r\n  },\r\n    {\r\n    id: 2,\r\n    name: 'Recovered',\r\n    style: styles.recovered,\r\n    end: recovered,\r\n    text: ' recovered cases of '\r\n  },\r\n    {\r\n    id: 3,\r\n    name: '.deaths',\r\n    style: styles.deaths,\r\n    end: deaths,\r\n    text: ' deaths caused by '\r\n  }];\r\n   \r\n  if (!confirmed) {\r\n    return (\r\n    <>\r\n      <img src={covid} alt=\"covid-19\"/>\r\n      <h3>Loading...</h3>\r\n      </>\r\n    )}\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify='center'>\r\n\r\n        {variants.map(variant => (\r\n          <Grid item component={Card} xs={12} md={3} key={variant.id} className={cx(styles.card, `${variant.style}`)} >\r\n          <CardContent>\r\n              <Typography color='textSecondary' gutterBottom>{variant.name}</Typography>\r\n            <Typography variant='h4'>\r\n              <CountUp\r\n                start={0}\r\n                end={variant.end.value}\r\n                duration={3.0}\r\n                separator=','\r\n              />            \r\n            </Typography>\r\n            <Typography color='textSecondary' gutterBottom>{new Date(lastUpdate).toLocaleDateString()}</Typography>\r\n              <Typography variant=\"body2\">Number of{variant.text}Covid-19</Typography>\r\n          </CardContent>\r\n        </Grid> \r\n        ))\r\n        }\r\n    </Grid>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`\r\n  }\r\n\r\ntry {\r\n  const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl);\r\n  return {confirmed, recovered, deaths, lastUpdate}\r\n \r\n} catch (error) { \r\n  console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const {data } = await axios.get(`${url}/daily`)   \r\n    \r\n    const modifiedData = data.map(dailyData => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }))\r\n    return modifiedData;\r\n    \r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {data: {countries}} = await axios.get(`${url}/countries`);\r\n    return countries.map(country => country.name)\r\n    \r\n  } catch (error) {\r\nconsole.log(error)\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    }\r\n\r\n    fetchAPI();\r\n  },[]);\r\n\r\n  const lineChart = (\r\n    dailyData.length\r\n      ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({date}) => date),\r\n            datasets: [{\r\n              data: dailyData.map(({ confirmed }) => confirmed),\r\n              label: \"Infected\",\r\n              borderColor: '#3333ff',\r\n              fill: true,\r\n            \r\n            }, {\r\n          data: dailyData.map(({ deaths }) => deaths),\r\n                label: \"Deaths\",\r\n                borderColor: 'red',\r\n              backgroundColor: 'rgba(255, 0, 0, .5)',\r\n              fill: true,\r\n        }],\r\n    }}   \r\n    />) \r\n      :\r\n      null\r\n  );\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [{\r\n            label: 'People',\r\n            backgroundColor: ['rgba(0, 0, 255, .5)', 'rgba(0, 255, 0, .5)', 'rgba(255, 0, 0, .5)'],\r\n            data: [confirmed.value, recovered.value, deaths.value]\r\n          }]\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}`}\r\n        }}\r\n      />\r\n    ) : null\r\n  )\r\n\r\n  return ( \r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Chart;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport { fetchCountries } from '../../api';\r\nimport styles from './CountryPicker.module.css'\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries())\r\n    }\r\n    fetchAPI();\r\n  }, [setFetchedCountries])\r\n\r\n  return ( \r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue='' onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=''>Global</option>\r\n        {fetchedCountries.map((country, index) => <option key={index} value={country}>{country}</option> )}\r\n      </NativeSelect>\r\n    </FormControl>\r\n   );\r\n}\r\n \r\nexport default CountryPicker;\r\n","import React from 'react';\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\nimport covidLogo from './images/covid_logo.png'\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n    this.setState({ data:  fetchedData })\r\n  }\r\n  \r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n        this.setState({ data:  fetchedData, country: country })\r\n  }\r\n\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <img className={styles.image} src={covidLogo} alt=\"coronavirus covid-19\"/>\r\n        <Cards data={data}/>\r\n        <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3HDJA\",\"image\":\"App_image__1zO54\"};","module.exports = __webpack_public_path__ + \"static/media/covid.befdb884.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__16gGg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2_0UE\"};","module.exports = __webpack_public_path__ + \"static/media/covid_logo.a6c66ccd.png\";"],"sourceRoot":""}